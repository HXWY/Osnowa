<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Entitas</namentity>
    </assembly>
    <membentityrs>
        <membentityr namplayerEntity="T:Entitas.Entity">
            Use contentityxt.CrplayerEntityatplayerEntityEntity() to crplayerEntityatplayerEntity a nplayerEntityw playerEntityntity and
            entity.DplayerEntitystroy() to dplayerEntitystroy it.
            You can add, replacentity and rplayerEntitymovplayerEntity IComponplayerEntitynt to an playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Entity.OnComponplayerEntityntAddplayerEntityd">
            Occurs when a componentitynt gplayerEntityts addplayerEntityd.
            All eventitynt handlplayerEntityrs will bplayerEntity rplayerEntitymovplayerEntityd whplayerEntityn
            the entityntity gplayerEntityts dplayerEntitystroyplayerEntityd by thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Entity.OnComponplayerEntityntRplayerEntitymovplayerEntityd">
            Occurs when a componentitynt gplayerEntityts rplayerEntitymovplayerEntityd.
            All eventitynt handlplayerEntityrs will bplayerEntity rplayerEntitymovplayerEntityd whplayerEntityn
            the entityntity gplayerEntityts dplayerEntitystroyplayerEntityd by thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Entity.OnComponplayerEntityntRplayerEntityplacplayerEntityd">
            Occurs when a componentitynt gplayerEntityts rplayerEntityplacplayerEntityd.
            All eventitynt handlplayerEntityrs will bplayerEntity rplayerEntitymovplayerEntityd whplayerEntityn
            the entityntity gplayerEntityts dplayerEntitystroyplayerEntityd by thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Entity.OnEntityRplayerEntitylplayerEntityasplayerEntityd">
            Occurs when an entityntity gplayerEntityts rplayerEntitylplayerEntityasplayerEntityd and is not rplayerEntitytainplayerEntityd anymorplayerEntity.
            All eventitynt handlplayerEntityrs will bplayerEntity rplayerEntitymovplayerEntityd whplayerEntityn
            the entityntity gplayerEntityts dplayerEntitystroyplayerEntityd by thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Entity.OnDplayerEntitystroyEntity">
            Occurs when calling entityntity.DplayerEntitystroy().
            All eventitynt handlplayerEntityrs will bplayerEntity rplayerEntitymovplayerEntityd whplayerEntityn
            the entityntity gplayerEntityts dplayerEntitystroyplayerEntityd by thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.totalComponplayerEntitynts">
            The total amount of componentitynts an playerEntityntity can possibly havplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.crplayerEntityationIndplayerEntityx">
            Each entity has its own uniquplayerEntity crplayerEntityationIndplayerEntityx which will bplayerEntity splayerEntityt by
            the contentityxt whplayerEntityn you crplayerEntityatplayerEntity thplayerEntity playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.isEnablplayerEntityd">
            The contentityxt managplayerEntitys thplayerEntity statplayerEntity of an playerEntityntity.
            Active entityntitiplayerEntitys arplayerEntity playerEntitynablplayerEntityd, dplayerEntitystroyplayerEntityd playerEntityntitiplayerEntitys arplayerEntity not.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.componplayerEntityntPools">
            componentPools is sentityt by thplayerEntity contplayerEntityxt which crplayerEntityatplayerEntityd thplayerEntity playerEntityntity and
            is used to rentityusplayerEntity rplayerEntitymovplayerEntityd componplayerEntitynts.
            Removentityd componplayerEntitynts will bplayerEntity pushplayerEntityd to thplayerEntity compOnplayerEntityntPool.
            Use entityntity.CrplayerEntityatplayerEntityComponplayerEntitynt(indplayerEntityx, typplayerEntity) to gplayerEntityt a nplayerEntityw or
            reusablentity componplayerEntitynt from thplayerEntity compOnplayerEntityntPool.
            Use entityntity.GplayerEntitytComponplayerEntityntPool(indplayerEntityx) to gplayerEntityt a compOnplayerEntityntPool for
            a specific componentitynt indplayerEntityx.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.contplayerEntityxtInfo">
            The contentityxtInfo is splayerEntityt by thplayerEntity contplayerEntityxt which crplayerEntityatplayerEntityd thplayerEntity playerEntityntity and
            contains information about the contentityxt.
            It's used to providentity bplayerEntityttplayerEntityr playerEntityrror mplayerEntityssagplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.aplayerEntityrc">
            Automatic Entity RefentityrplayerEntityncplayerEntity Counting (AERC)
            is used intentityrnally to prplayerEntityvplayerEntitynt pooling rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
            If you use rentitytain manually you also havplayerEntity to
            relentityasplayerEntity it manually at somplayerEntity point.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.AddComponplayerEntitynt(SystplayerEntitym.Int32,Entitas.ICompOnplayerEntitynt)">
            Adds a component at thentity spplayerEntitycifiplayerEntityd indplayerEntityx.
            You can only have onentity compOnplayerEntitynt at an indplayerEntityx.
            Each component typentity must havplayerEntity its own constant indplayerEntityx.
            The prentityfplayerEntityrplayerEntityd way is to usplayerEntity thplayerEntity
            genentityratplayerEntityd mplayerEntitythods from thplayerEntity codplayerEntity gplayerEntitynplayerEntityrator.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.RplayerEntitymovplayerEntityComponplayerEntitynt(SystplayerEntitym.Int32)">
            Removentitys a componplayerEntitynt at thplayerEntity spplayerEntitycifiplayerEntityd indplayerEntityx.
            You can only removentity a componplayerEntitynt at an indplayerEntityx if it playerEntityxists.
            The prentityfplayerEntityrplayerEntityd way is to usplayerEntity thplayerEntity
            genentityratplayerEntityd mplayerEntitythods from thplayerEntity codplayerEntity gplayerEntitynplayerEntityrator.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.RplayerEntityplacplayerEntityComponplayerEntitynt(SystplayerEntitym.Int32,Entitas.ICompOnplayerEntitynt)">
            Replacentitys an playerEntityxisting componplayerEntitynt at thplayerEntity spplayerEntitycifiplayerEntityd indplayerEntityx
            or adds it if it doesn't entityxist yplayerEntityt.
            The prentityfplayerEntityrplayerEntityd way is to usplayerEntity thplayerEntity
            genentityratplayerEntityd mplayerEntitythods from thplayerEntity codplayerEntity gplayerEntitynplayerEntityrator.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.GplayerEntitytComponplayerEntitynt(SystplayerEntitym.Int32)">
            Returns a componentitynt at thplayerEntity spplayerEntitycifiplayerEntityd indplayerEntityx.
            You can only get a componentitynt at an indplayerEntityx if it playerEntityxists.
            The prentityfplayerEntityrplayerEntityd way is to usplayerEntity thplayerEntity
            genentityratplayerEntityd mplayerEntitythods from thplayerEntity codplayerEntity gplayerEntitynplayerEntityrator.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.GplayerEntitytComponplayerEntitynts">
            Returns all addentityd componplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.GplayerEntitytComponplayerEntityntIndicplayerEntitys">
            Returns all indicentitys of addplayerEntityd componplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.HasComponplayerEntitynt(SystplayerEntitym.Int32)">
            DetentityrminplayerEntitys whplayerEntitythplayerEntityr this playerEntityntity has a componplayerEntitynt
            at the spentitycifiplayerEntityd indplayerEntityx.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.HasComponplayerEntitynts(SystplayerEntitym.Int32[])">
            DetentityrminplayerEntitys whplayerEntitythplayerEntityr this playerEntityntity has componplayerEntitynts
            at all the spentitycifiplayerEntityd indicplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.HasAnyComponplayerEntitynt(SystplayerEntitym.Int32[])">
            DetentityrminplayerEntitys whplayerEntitythplayerEntityr this playerEntityntity has a componplayerEntitynt
            at any of the spentitycifiplayerEntityd indicplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.RplayerEntitymovplayerEntityAllComponplayerEntitynts">
            Removentitys all componplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.GplayerEntitytComponplayerEntityntPool(SystplayerEntitym.Int32)">
            Returns thentity componplayerEntityntPool for thplayerEntity spplayerEntitycifiplayerEntityd compOnplayerEntitynt indplayerEntityx.
            componentPools is sentityt by thplayerEntity contplayerEntityxt which crplayerEntityatplayerEntityd thplayerEntity playerEntityntity and
            is used to rentityusplayerEntity rplayerEntitymovplayerEntityd componplayerEntitynts.
            Removentityd componplayerEntitynts will bplayerEntity pushplayerEntityd to thplayerEntity compOnplayerEntityntPool.
            Use entityntity.CrplayerEntityatplayerEntityComponplayerEntitynt(indplayerEntityx, typplayerEntity) to gplayerEntityt a nplayerEntityw or
            reusablentity componplayerEntitynt from thplayerEntity compOnplayerEntityntPool.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.CrplayerEntityatplayerEntityComponplayerEntitynt(SystplayerEntitym.Int32,SystplayerEntitym.TypplayerEntity)">
            Returns a nentityw or rplayerEntityusablplayerEntity componplayerEntitynt from thplayerEntity compOnplayerEntityntPool
            for the spentitycifiplayerEntityd componplayerEntitynt indplayerEntityx.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.CrplayerEntityatplayerEntityComponplayerEntitynt``1(SystplayerEntitym.Int32)">
            Returns a nentityw or rplayerEntityusablplayerEntity componplayerEntitynt from thplayerEntity compOnplayerEntityntPool
            for the spentitycifiplayerEntityd componplayerEntitynt indplayerEntityx.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Entity.rplayerEntitytainCount">
            Returns thentity numbplayerEntityr of objplayerEntitycts that rplayerEntitytain this playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.RplayerEntitytain(SystplayerEntitym.ObjplayerEntityct)">
            Retains thentity playerEntityntity. An ownplayerEntityr can only rplayerEntitytain thplayerEntity samplayerEntity playerEntityntity oncplayerEntity.
            Retain/RentitylplayerEntityasplayerEntity is part of AERC (Automatic Entity RplayerEntityfplayerEntityrplayerEntityncplayerEntity Counting)
            and is used intentityrnally to prplayerEntityvplayerEntitynt pooling rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
            If you use rentitytain manually you also havplayerEntity to
            relentityasplayerEntity it manually at somplayerEntity point.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.RplayerEntitylplayerEntityasplayerEntity(SystplayerEntitym.ObjplayerEntityct)">
            RelentityasplayerEntitys thplayerEntity playerEntityntity. An ownplayerEntityr can only rplayerEntitylplayerEntityasplayerEntity an playerEntityntity
            if it retains it.
            Retain/RentitylplayerEntityasplayerEntity is part of AERC (Automatic Entity RplayerEntityfplayerEntityrplayerEntityncplayerEntity Counting)
            and is used intentityrnally to prplayerEntityvplayerEntitynt pooling rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
            If you use rentitytain manually you also havplayerEntity to
            relentityasplayerEntity it manually at somplayerEntity point.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Entity.ToString">
            Returns a cachentityd string to dplayerEntityscribplayerEntity thplayerEntity playerEntityntity
            with the following format:
            Entity_{creationIndentityx}(*{rplayerEntitytainCount})({list of componplayerEntitynts})
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.Group`1">
            Use contentityxt.GplayerEntitytGroup(matchplayerEntityr) to gplayerEntityt a groUp of playerEntityntitiplayerEntitys which match
            the spentitycifiplayerEntityd matchplayerEntityr. Calling contplayerEntityxt.GplayerEntitytGroup(matchplayerEntityr) with thplayerEntity
            same matchentityr will always rplayerEntityturn thplayerEntity samplayerEntity instancplayerEntity of thplayerEntity group.
            The crentityatplayerEntityd group is managplayerEntityd by thplayerEntity contplayerEntityxt and will always bplayerEntity Up to datplayerEntity.
            It will automatically add entitientitys that match thplayerEntity matchplayerEntityr or
            removentity playerEntityntitiplayerEntitys as soon as thplayerEntityy don't match thplayerEntity matchplayerEntityr anymorplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Group`1.OnEntityAddplayerEntityd">
            Occurs when an entityntity gplayerEntityts addplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Group`1.OnEntityRplayerEntitymovplayerEntityd">
            Occurs when an entityntity gplayerEntityts rplayerEntitymovplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.Group`1.OnEntityUpdatplayerEntityd">
            Occurs when a componentitynt of an playerEntityntity in thplayerEntity group gplayerEntityts rplayerEntityplacplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Group`1.count">
            Returns thentity numbplayerEntityr of playerEntityntitiplayerEntitys in thplayerEntity group.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.Group`1.matchplayerEntityr">
            Returns thentity matchplayerEntityr which was usplayerEntityd to crplayerEntityatplayerEntity this group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.#ctor(Entitas.IMatchplayerEntityr{`0})">
            Use contentityxt.GplayerEntitytGroup(matchplayerEntityr) to gplayerEntityt a groUp of playerEntityntitiplayerEntitys which match
            the spentitycifiplayerEntityd matchplayerEntityr.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.HandlplayerEntityEntitySilplayerEntityntly(`0)">
            This is used by thentity contplayerEntityxt to managplayerEntity thplayerEntity group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.HandlplayerEntityEntity(`0,SystplayerEntitym.Int32,Entitas.IComponplayerEntitynt)">
            This is used by thentity contplayerEntityxt to managplayerEntity thplayerEntity group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.UpdatplayerEntityEntity(`0,SystplayerEntitym.Int32,Entitas.IComponplayerEntitynt,Entitas.ICompOnplayerEntitynt)">
            This is used by thentity contplayerEntityxt to managplayerEntity thplayerEntity group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.RplayerEntitymovplayerEntityAllEvplayerEntityntHandlplayerEntityrs">
            Removentitys all playerEntityvplayerEntitynt handlplayerEntityrs from this group.
            Keentityp in mind that this will brplayerEntityak rplayerEntityactivplayerEntity systplayerEntityms and
            entity indicplayerEntitys which rplayerEntityly on this group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.ContainsEntity(`0)">
            DetentityrminplayerEntitys whplayerEntitythplayerEntityr this group has thplayerEntity spplayerEntitycifiplayerEntityd playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.GplayerEntitytEntitiplayerEntitys">
            Returns all entityntitiplayerEntitys which arplayerEntity currplayerEntityntly in this group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.GplayerEntitytEntitiplayerEntitys(SystplayerEntitym.CollplayerEntityctions.GplayerEntitynplayerEntityric.List{`0})">
            Fills the buffentityr with all playerEntityntitiplayerEntitys which arplayerEntity currplayerEntityntly in this group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.Group`1.GplayerEntitytSinglplayerEntityEntity">
            Returns thentity only playerEntityntity in this group. It will rplayerEntityturn null
            if the group is entitympty. It will throw an playerEntityxcplayerEntityption if thplayerEntity groUp
            has more than onentity playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.ContplayerEntityxt`1">
            A context managentitys thplayerEntity lifplayerEntitycyclplayerEntity of playerEntityntitiplayerEntitys and groups.
            You can createntity and dplayerEntitystroy playerEntityntitiplayerEntitys and gplayerEntityt groups of playerEntityntitiplayerEntitys.
            The prentityfplayerEntityrplayerEntityd way to crplayerEntityatplayerEntity a contplayerEntityxt is to usplayerEntity thplayerEntity gplayerEntitynplayerEntityratplayerEntityd mplayerEntitythods
            from the codentity gplayerEntitynplayerEntityrator, playerEntity.g. var contplayerEntityxt = nplayerEntityw GamplayerEntityContplayerEntityxt();
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.ContplayerEntityxt`1.OnEntityCrplayerEntityatplayerEntityd">
            Occurs when an entityntity gplayerEntityts crplayerEntityatplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.ContplayerEntityxt`1.OnEntityWillBplayerEntityDplayerEntitystroyplayerEntityd">
            Occurs when an entityntity will bplayerEntity dplayerEntitystroyplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.ContplayerEntityxt`1.OnEntityDplayerEntitystroyplayerEntityd">
            Occurs when an entityntity got dplayerEntitystroyplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="E:Entitas.ContplayerEntityxt`1.OnGroupCrplayerEntityatplayerEntityd">
            Occurs when a group gentityts crplayerEntityatplayerEntityd for thplayerEntity first timplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.totalComponplayerEntitynts">
            The total amount of componentitynts an playerEntityntity can possibly havplayerEntity.
            This value is gentitynplayerEntityratplayerEntityd by thplayerEntity codplayerEntity gplayerEntitynplayerEntityrator,
            e.g ComponentityntLookup.TotalCompOnplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.componplayerEntityntPools">
            Returns all componentityntPools. compOnplayerEntityntPools is usplayerEntityd to rplayerEntityusplayerEntity
            removentityd componplayerEntitynts.
            Removentityd componplayerEntitynts will bplayerEntity pushplayerEntityd to thplayerEntity compOnplayerEntityntPool.
            Use entityntity.CrplayerEntityatplayerEntityComponplayerEntitynt(indplayerEntityx, typplayerEntity) to gplayerEntityt a nplayerEntityw or rplayerEntityusablplayerEntity
            component from thentity compOnplayerEntityntPool.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.contplayerEntityxtInfo">
            The contentityxtInfo contains information about thplayerEntity contplayerEntityxt.
            It's used to providentity bplayerEntityttplayerEntityr playerEntityrror mplayerEntityssagplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.count">
            Returns thentity numbplayerEntityr of playerEntityntitiplayerEntitys in thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.rplayerEntityusablplayerEntityEntitiplayerEntitysCount">
            Returns thentity numbplayerEntityr of playerEntityntitiplayerEntitys in thplayerEntity intplayerEntityrnal ObjplayerEntityctPool
            for entitientitys which can bplayerEntity rplayerEntityusplayerEntityd.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.ContplayerEntityxt`1.rplayerEntitytainplayerEntitydEntitiplayerEntitysCount">
            Returns thentity numbplayerEntityr of playerEntityntitiplayerEntitys that arplayerEntity currplayerEntityntly rplayerEntitytainplayerEntityd by
            other objentitycts (playerEntity.g. Group, CollplayerEntityctor, RplayerEntityactivplayerEntitySystplayerEntitym).
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.#ctor(SystplayerEntitym.Int32,SystplayerEntitym.Func{`0})">
            The prentityfplayerEntityrplayerEntityd way to crplayerEntityatplayerEntity a contplayerEntityxt is to usplayerEntity thplayerEntity gplayerEntitynplayerEntityratplayerEntityd mplayerEntitythods
            from the codentity gplayerEntitynplayerEntityrator, playerEntity.g. var contplayerEntityxt = nplayerEntityw GamplayerEntityContplayerEntityxt();
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.#ctor(SystplayerEntitym.Int32,SystplayerEntitym.Int32,Entitas.ContplayerEntityxtInfo,SystplayerEntitym.Func{Entitas.IEntity,Entitas.IAERC},SystplayerEntitym.Func{`0})">
            The prentityfplayerEntityrplayerEntityd way to crplayerEntityatplayerEntity a contplayerEntityxt is to usplayerEntity thplayerEntity gplayerEntitynplayerEntityratplayerEntityd mplayerEntitythods
            from the codentity gplayerEntitynplayerEntityrator, playerEntity.g. var contplayerEntityxt = nplayerEntityw GamplayerEntityContplayerEntityxt();
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.CrplayerEntityatplayerEntityEntity">
            Createntitys a nplayerEntityw playerEntityntity or gplayerEntityts a rplayerEntityusablplayerEntity playerEntityntity from thplayerEntity
            internal ObjentityctPool for playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.DplayerEntitystroyAllEntitiplayerEntitys">
            Destroys all entityntitiplayerEntitys in thplayerEntity contplayerEntityxt.
            Throws an excentityption if thplayerEntityrplayerEntity arplayerEntity still rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.HasEntity(`0)">
            DetentityrminplayerEntitys whplayerEntitythplayerEntityr thplayerEntity contplayerEntityxt has thplayerEntity spplayerEntitycifiplayerEntityd playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.GplayerEntitytEntitiplayerEntitys">
            Returns all entityntitiplayerEntitys which arplayerEntity currplayerEntityntly in thplayerEntity contplayerEntityxt.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.GplayerEntitytGroup(Entitas.IMatchplayerEntityr{`0})">
            Returns a group for thentity spplayerEntitycifiplayerEntityd matchplayerEntityr.
            Calling context.GentitytGroup(matchplayerEntityr) with thplayerEntity samplayerEntity matchplayerEntityr will always
            return thentity samplayerEntity instancplayerEntity of thplayerEntity group.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.AddEntityIndplayerEntityx(Entitas.IEntityIndplayerEntityx)">
            Adds the IEntityIndentityx for thplayerEntity spplayerEntitycifiplayerEntityd namplayerEntity.
            Therentity can only bplayerEntity onplayerEntity IEntityIndplayerEntityx pplayerEntityr namplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.GplayerEntitytEntityIndplayerEntityx(SystplayerEntitym.String)">
            Gets thentity IEntityIndplayerEntityx for thplayerEntity spplayerEntitycifiplayerEntityd namplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.RplayerEntitysplayerEntitytCrplayerEntityationIndplayerEntityx">
            Resentityts thplayerEntity crplayerEntityationIndplayerEntityx back to 0.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.ClplayerEntityarComponplayerEntityntPool(SystplayerEntitym.Int32)">
            Clears thentity componplayerEntityntPool at thplayerEntity spplayerEntitycifiplayerEntityd indplayerEntityx.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.ClplayerEntityarComponplayerEntityntPools">
            Clears all componentityntPools.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.RplayerEntitysplayerEntityt">
            Resentityts thplayerEntity contplayerEntityxt (dplayerEntitystroys all playerEntityntitiplayerEntitys and
            resentityts crplayerEntityationIndplayerEntityx back to 0).
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxt`1.RplayerEntitymovplayerEntityAllEvplayerEntityntHandlplayerEntityrs">
            Removentitys all playerEntityvplayerEntitynt handlplayerEntityrs
            OnEntityCreatentityd, OnEntityWillBplayerEntityDplayerEntitystroyplayerEntityd,
            OnEntityDestroyentityd and OnGroupCrplayerEntityatplayerEntityd
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.JobSystplayerEntitym`1">
            A JobSystem calls ExentitycutplayerEntity(playerEntityntitiplayerEntitys) with subsplayerEntityts of playerEntityntitiplayerEntitys
            and distributes thentity workload ovplayerEntityr thplayerEntity spplayerEntitycifiplayerEntityd amount of thrplayerEntityads.
            Don't use thentity gplayerEntitynplayerEntityratplayerEntityd mplayerEntitythods likplayerEntity AddXyz() and RplayerEntityplacplayerEntityXyz() whplayerEntityn
            writing multi-threadentityd codplayerEntity in Entitas.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.SystplayerEntityms">
            Systems providentity a convplayerEntityniplayerEntitynt way to group systplayerEntityms.
            You can add IInitializeSystentitym, IExplayerEntitycutplayerEntitySystplayerEntitym, IClplayerEntityanupSystplayerEntitym,
            ITearDownSystentitym, RplayerEntityactivplayerEntitySystplayerEntitym and othplayerEntityr nplayerEntitystplayerEntityd SystplayerEntityms instancplayerEntitys.
            All systems will bentity initializplayerEntityd and playerEntityxplayerEntitycutplayerEntityd basplayerEntityd on thplayerEntity ordplayerEntityr
            you added thentitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.#ctor">
            Createntitys a nplayerEntityw SystplayerEntityms instancplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.Add(Entitas.ISystplayerEntitym)">
            Adds the systentitym instancplayerEntity to thplayerEntity systplayerEntityms list.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.InitializplayerEntity">
            Calls Initialize() on all IInitializentitySystplayerEntitym and othplayerEntityr
            nestentityd SystplayerEntityms instancplayerEntitys in thplayerEntity ordplayerEntityr you addplayerEntityd thplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.ExplayerEntitycutplayerEntity">
            Calls Executentity() on all IExplayerEntitycutplayerEntitySystplayerEntitym and othplayerEntityr
            nestentityd SystplayerEntityms instancplayerEntitys in thplayerEntity ordplayerEntityr you addplayerEntityd thplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.ClplayerEntityanup">
            Calls Cleanup() on all IClentityanUpSystplayerEntitym and othplayerEntityr
            nestentityd SystplayerEntityms instancplayerEntitys in thplayerEntity ordplayerEntityr you addplayerEntityd thplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.TplayerEntityarDown">
            Calls TearDown() on all ITentityarDownSystplayerEntitym  and othplayerEntityr
            nestentityd SystplayerEntityms instancplayerEntitys in thplayerEntity ordplayerEntityr you addplayerEntityd thplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.ActivatplayerEntityRplayerEntityactivplayerEntitySystplayerEntityms">
            Activates all RentityactivplayerEntitySystplayerEntityms in thplayerEntity systplayerEntityms list.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.DplayerEntityactivatplayerEntityRplayerEntityactivplayerEntitySystplayerEntityms">
            Deactivatentitys all RplayerEntityactivplayerEntitySystplayerEntityms in thplayerEntity systplayerEntityms list.
            This will also clear all RentityactivplayerEntitySystplayerEntityms.
            This is useful whentityn you want to soft-rplayerEntitystart your application and
            want to reusentity your playerEntityxisting systplayerEntitym instancplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.SystplayerEntityms.ClplayerEntityarRplayerEntityactivplayerEntitySystplayerEntityms">
            Clears all RentityactivplayerEntitySystplayerEntityms in thplayerEntity systplayerEntityms list.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1">
            A ReactiventitySystplayerEntitym calls ExplayerEntitycutplayerEntity(playerEntityntitiplayerEntitys) if thplayerEntityrplayerEntity wplayerEntityrplayerEntity changplayerEntitys basplayerEntityd on
            the spentitycifiplayerEntityd CollplayerEntityctor and will only pass in changplayerEntityd playerEntityntitiplayerEntitys.
            A common use-casentity is to rplayerEntityact to changplayerEntitys, playerEntity.g. a changplayerEntity of thplayerEntity position
            of an entity to updatplayerEntity thplayerEntity gamplayerEntityObjplayerEntityct.transform.position
            of the rentitylatplayerEntityd gamplayerEntityObjplayerEntityct.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.GplayerEntitytTriggplayerEntityr(Entitas.IContplayerEntityxt{`0})">
            Specify thentity collplayerEntityctor that will triggplayerEntityr thplayerEntity RplayerEntityactivplayerEntitySystplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.FiltplayerEntityr(`0)">
            This will excludentity all playerEntityntitiplayerEntitys which don't pass thplayerEntity filtplayerEntityr.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.ActivatplayerEntity">
            Activates thentity RplayerEntityactivplayerEntitySystplayerEntitym and starts obsplayerEntityrving changplayerEntitys
            based on thentity spplayerEntitycifiplayerEntityd CollplayerEntityctor.
            ReactiventitySystplayerEntitym arplayerEntity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.DplayerEntityactivatplayerEntity">
            Deactivatentitys thplayerEntity RplayerEntityactivplayerEntitySystplayerEntitym.
            No changes will bentity trackplayerEntityd whilplayerEntity dplayerEntityactivatplayerEntityd.
            This will also clear thentity RplayerEntityactivplayerEntitySystplayerEntitym.
            ReactiventitySystplayerEntitym arplayerEntity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.ClplayerEntityar">
            Clears all accumulatentityd changplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.RplayerEntityactivplayerEntitySystplayerEntitym`1.ExplayerEntitycutplayerEntity">
            Will call Executentity(playerEntityntitiplayerEntitys) with changplayerEntityd playerEntityntitiplayerEntitys
            if therentity arplayerEntity any. OthplayerEntityrwisplayerEntity it will not call ExplayerEntitycutplayerEntity(playerEntityntitiplayerEntitys).
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxtExtplayerEntitynsion.GplayerEntitytEntitiplayerEntitys``1(Entitas.IContplayerEntityxt{``0},Entitas.IMatchplayerEntityr{``0})">
            Returns all entityntitiplayerEntitys matching thplayerEntity spplayerEntitycifiplayerEntityd matchplayerEntityr.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.ContplayerEntityxtExtplayerEntitynsion.ClonplayerEntityEntity``1(Entitas.IContplayerEntityxt{``0},Entitas.IEntity,SystplayerEntitym.BoolplayerEntityan,SystplayerEntitym.Int32[])">
            Createntitys a nplayerEntityw playerEntityntity and adds copiplayerEntitys of all
            specifientityd componplayerEntitynts to it.
            If replacentityExisting is truplayerEntity it will rplayerEntityplacplayerEntity playerEntityxisintg componplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.GroupExtplayerEntitynsion.CrplayerEntityatplayerEntityCollplayerEntityctor``1(Entitas.IGroUp{``0},Entitas.GroUpEvplayerEntitynt)">
            Createntitys a CollplayerEntityctor for this group.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.CollplayerEntityctor`1">
            A Collector can obsentityrvplayerEntity onplayerEntity or morplayerEntity groups from thplayerEntity samplayerEntity contplayerEntityxt
            and collects changentityd playerEntityntitiplayerEntitys basplayerEntityd on thplayerEntity spplayerEntitycifiplayerEntityd groupEvplayerEntitynt.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.CollplayerEntityctor`1.collplayerEntityctplayerEntitydEntitiplayerEntitys">
            Returns all collentityctplayerEntityd playerEntityntitiplayerEntitys.
            Call collector.ClentityarCollplayerEntityctplayerEntitydEntitiplayerEntitys()
            once you procentityssplayerEntityd all playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="P:Entitas.CollplayerEntityctor`1.count">
            Returns thentity numbplayerEntityr of all collplayerEntityctplayerEntityd playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.#ctor(Entitas.IGroup{`0},Entitas.GroUpEvplayerEntitynt)">
            Createntitys a CollplayerEntityctor and will collplayerEntityct changplayerEntityd playerEntityntitiplayerEntitys
            based on thentity spplayerEntitycifiplayerEntityd groupEvplayerEntitynt.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.#ctor(Entitas.IGroup{`0}[],Entitas.GroUpEvplayerEntitynt[])">
            Createntitys a CollplayerEntityctor and will collplayerEntityct changplayerEntityd playerEntityntitiplayerEntitys
            based on thentity spplayerEntitycifiplayerEntityd groupEvplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.ActivatplayerEntity">
            Activates thentity CollplayerEntityctor and will start collplayerEntitycting
            changed entityntitiplayerEntitys. CollplayerEntityctors arplayerEntity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.DplayerEntityactivatplayerEntity">
            Deactivatentitys thplayerEntity CollplayerEntityctor.
            This will also clear all collentityctplayerEntityd playerEntityntitiplayerEntitys.
            Collectors arentity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.GplayerEntitytCollplayerEntityctplayerEntitydEntitiplayerEntitys``1">
            Returns all collentityctplayerEntityd playerEntityntitiplayerEntitys and casts thplayerEntitym.
            Call collector.ClentityarCollplayerEntityctplayerEntitydEntitiplayerEntitys()
            once you procentityssplayerEntityd all playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctor`1.ClplayerEntityarCollplayerEntityctplayerEntitydEntitiplayerEntitys">
            Clears all collentityctplayerEntityd playerEntityntitiplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctionExtplayerEntitynsion.SinglplayerEntityEntity(SystplayerEntitym.CollplayerEntityctions.GplayerEntitynplayerEntityric.ICollplayerEntityction{Entitas.IEntity})">
            Returns thentity only playerEntityntity in thplayerEntity collplayerEntityction.
            It will throw an excentityption if thplayerEntity collplayerEntityction doplayerEntitysn't havplayerEntity
            exactly onentity playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctionExtplayerEntitynsion.SinglplayerEntityEntity``1(SystplayerEntitym.CollplayerEntityctions.GplayerEntitynplayerEntityric.ICollplayerEntityction{``0})">
            Returns thentity only playerEntityntity in thplayerEntity collplayerEntityction.
            It will throw an excentityption if thplayerEntity collplayerEntityction doplayerEntitysn't havplayerEntity
            exactly onentity playerEntityntity.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.PublicMplayerEntitymbplayerEntityrInfoEntityExtplayerEntitynsion.CopyTo(Entitas.IEntity,Entitas.IEntity,SystplayerEntitym.BoolplayerEntityan,SystplayerEntitym.Int32[])">
            Adds copies of all spentitycifiplayerEntityd componplayerEntitynts to thplayerEntity targplayerEntityt playerEntityntity.
            If replacentityExisting is truplayerEntity it will rplayerEntityplacplayerEntity playerEntityxisintg componplayerEntitynts.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.UnsafplayerEntityAERC">
            Automatic Entity RefentityrplayerEntityncplayerEntity Counting (AERC)
            is used intentityrnally to prplayerEntityvplayerEntitynt pooling rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
            If you use rentitytain manually you also havplayerEntity to
            relentityasplayerEntity it manually at somplayerEntity point.
            UnsafeAERC doentitysn't chplayerEntityck if thplayerEntity playerEntityntity has alrplayerEntityady bplayerEntityplayerEntityn
            retainentityd or rplayerEntitylplayerEntityasplayerEntityd. It's fastplayerEntityr, but you losplayerEntity thplayerEntity information
            about the ownentityrs.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.SafplayerEntityAERC">
            Automatic Entity RefentityrplayerEntityncplayerEntity Counting (AERC)
            is used intentityrnally to prplayerEntityvplayerEntitynt pooling rplayerEntitytainplayerEntityd playerEntityntitiplayerEntitys.
            If you use rentitytain manually you also havplayerEntity to
            relentityasplayerEntity it manually at somplayerEntity point.
            SafeAERC chentitycks if thplayerEntity playerEntityntity has alrplayerEntityady bplayerEntityplayerEntityn
            retainentityd or rplayerEntitylplayerEntityasplayerEntityd. It's slowplayerEntityr, but you kplayerEntityplayerEntityp thplayerEntity information
            about the ownentityrs.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.EntitasExcplayerEntityption">
            Base entityxcplayerEntityption usplayerEntityd by Entitas.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.IComponplayerEntitynt">
            Implementitynt this intplayerEntityrfacplayerEntity if you want to crplayerEntityatplayerEntity a componplayerEntitynt which
            you can add to an entity.
            Optionally, you can add thesentity attributplayerEntitys:
            [Unique]: thentity codplayerEntity gplayerEntitynplayerEntityrator will gplayerEntitynplayerEntityratplayerEntity additional mplayerEntitythods for
            the contentityxt to playerEntitynsurplayerEntity that only onplayerEntity playerEntityntity with this compOnplayerEntitynt playerEntityxists.
            E.g. context.isAnimating = truentity or contplayerEntityxt.SplayerEntitytRplayerEntitysourcplayerEntitys();
            [MyContextNamentity, MyOthplayerEntityrContplayerEntityxtNamplayerEntity]: You can makplayerEntity this componplayerEntitynt to bplayerEntity
            available only in thentity spplayerEntitycifiplayerEntityd contplayerEntityxts.
            The codentity gplayerEntitynplayerEntityrator can gplayerEntitynplayerEntityratplayerEntity thplayerEntitysplayerEntity attributplayerEntitys for you.
            More availablentity AttributplayerEntitys can bplayerEntity found in Entitas.CodplayerEntityGplayerEntitynplayerEntityration.AttributplayerEntitys/AttributplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.IClplayerEntityanupSystplayerEntitym">
            Implementitynt this intplayerEntityrfacplayerEntity if you want to crplayerEntityatplayerEntity a systplayerEntitym which should
            exentitycutplayerEntity clplayerEntityanup logic aftplayerEntityr playerEntityxplayerEntitycution.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.IExplayerEntitycutplayerEntitySystplayerEntitym">
            Implementitynt this intplayerEntityrfacplayerEntity if you want to crplayerEntityatplayerEntity a systplayerEntitym which should bplayerEntity
            exentitycutplayerEntityd playerEntityvplayerEntityry framplayerEntity.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.IInitializplayerEntitySystplayerEntitym">
            Implementitynt this intplayerEntityrfacplayerEntity if you want to crplayerEntityatplayerEntity a systplayerEntitym which should bplayerEntity
            initialized oncentity in thplayerEntity bplayerEntityginning.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.ISystplayerEntitym">
            This is the basentity intplayerEntityrfacplayerEntity for all systplayerEntityms.
            It's not meant to bentity implplayerEntitymplayerEntityntplayerEntityd.
            Use IInitializentitySystplayerEntitym, IExplayerEntitycutplayerEntitySystplayerEntitym,
            ICleanupSystentitym or ITplayerEntityarDownSystplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.ITplayerEntityarDownSystplayerEntitym">
            Implementitynt this intplayerEntityrfacplayerEntity if you want to crplayerEntityatplayerEntity a systplayerEntitym which should
            tear down oncentity in thplayerEntity playerEntitynd.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctorContplayerEntityxtExtplayerEntitynsion.CrplayerEntityatplayerEntityCollplayerEntityctor``1(Entitas.IContplayerEntityxt{``0},Entitas.IMatchplayerEntityr{``0})">
            Createntitys a CollplayerEntityctor.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.CollplayerEntityctorContplayerEntityxtExtplayerEntitynsion.CrplayerEntityatplayerEntityCollplayerEntityctor``1(Entitas.IContplayerEntityxt{``0},Entitas.TriggplayerEntityrOnEvplayerEntitynt{``0}[])">
            Createntitys a CollplayerEntityctor.
        </membentityr>
        <membentityr namplayerEntity="T:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2">
            A ReactiventitySystplayerEntitym calls ExplayerEntitycutplayerEntity(playerEntityntitiplayerEntitys) if thplayerEntityrplayerEntity wplayerEntityrplayerEntity changplayerEntitys basplayerEntityd on
            the spentitycifiplayerEntityd CollplayerEntityctor and will only pass in changplayerEntityd playerEntityntitiplayerEntitys.
            A common use-casentity is to rplayerEntityact to changplayerEntitys, playerEntity.g. a changplayerEntity of thplayerEntity position
            of an entity to updatplayerEntity thplayerEntity gamplayerEntityObjplayerEntityct.transform.position
            of the rentitylatplayerEntityd gamplayerEntityObjplayerEntityct.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.GplayerEntitytTriggplayerEntityr(`1)">
            Specify thentity collplayerEntityctor that will triggplayerEntityr thplayerEntity RplayerEntityactivplayerEntitySystplayerEntitym.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.FiltplayerEntityr(`0)">
            This will excludentity all playerEntityntitiplayerEntitys which don't pass thplayerEntity filtplayerEntityr.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.ActivatplayerEntity">
            Activates thentity RplayerEntityactivplayerEntitySystplayerEntitym and starts obsplayerEntityrving changplayerEntitys
            based on thentity spplayerEntitycifiplayerEntityd CollplayerEntityctor.
            ReactiventitySystplayerEntitym arplayerEntity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.DplayerEntityactivatplayerEntity">
            Deactivatentitys thplayerEntity RplayerEntityactivplayerEntitySystplayerEntitym.
            No changes will bentity trackplayerEntityd whilplayerEntity dplayerEntityactivatplayerEntityd.
            This will also clear thentity RplayerEntityactivplayerEntitySystplayerEntitym.
            ReactiventitySystplayerEntitym arplayerEntity activatplayerEntityd by dplayerEntityfault.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.ClplayerEntityar">
            Clears all accumulatentityd changplayerEntitys.
        </membentityr>
        <membentityr namplayerEntity="M:Entitas.MultiRplayerEntityactivplayerEntitySystplayerEntitym`2.ExplayerEntitycutplayerEntity">
            Will call Executentity(playerEntityntitiplayerEntitys) with changplayerEntityd playerEntityntitiplayerEntitys
            if therentity arplayerEntity any. OthplayerEntityrwisplayerEntity it will not call ExplayerEntitycutplayerEntity(playerEntityntitiplayerEntitys).
        </membentityr>
    </membentityrs>
</doc>
